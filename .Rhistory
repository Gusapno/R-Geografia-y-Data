driver.switch_to.window("secondtab")
driver.get(link)
driver.find_element(By.XPATH,'//*[@id="mapDiv"]/div/div/div[4]/div/div/div/div/div/a')
driver.find_element(By.CSS_SELECTOR, "#modal > iframe")
driver.switch_to.frame('iframe')
driver.findElements(By.tagName("iframe")
)
driver.find_element(By.tagName("iframe"))
driver.find_element(By.TAG_NAME("iframe"))
driver.find_elements(By.TAG_NAME("iframe"))
iframe = driver.find_element(By.CSS_SELECTOR, "#modal > iframe")
driver.find_element(By.TAG_NAME, "iframe")
iframe = driver.find_element(By.TAG_NAME, "iframe")
driver.switch_to.frame(iframe)
driver.find_element(By.XPATH,'//*[@id="mapDiv"]/div/div/div[4]/div/div/div/div/div/a')
iframe.find_element(By.XPATH,'//*[@id="mapDiv"]/div/div/div[4]/div/div/div/div/div/a')
driver.find_element(By.TAG_NAME, 'View larger map').click()
elem_titles = driver.find_elements(By.XPATH,'//*[@class="title"]')
iframe = driver.find_element(By.TAG_NAME, "iframe")
iframe = driver.find_element(By.TAG_NAME, "iframe")
iframe = driver.find_element(By.TAG_NAME, "iframe")
driver.switch_to.frame(iframe)
driver.find_element(By.TAG_NAME, 'View larger map').click()
driver.find_element(By.NAME, 'View larger map').click()
driver.find_element(By.CLASS_NAME, 'View larger map').click()
driver.find_element(By.XPATH,'//*[@id="mapDiv"]/div/div/div[4]/div/div/div/div/div/a')
driver.find_elements(By.XPATH,'//*[@id="mapDiv"]/div/div/div[4]/div/div/div/div/div/a')
iframe = driver.find_element(By.TAG_NAME, "iframe")
iframe = driver.find_element(By.TAG_NAME, "iframe")
driver.switch_to.frame(iframe)
iframe = driver.find_element(By.TAG_NAME, "iframe")
driver.switch_to.default_content()
iframe = driver.find_element(By.TAG_NAME, "iframe")
iframe = driver.find_element(By.TAG_NAME, "iframe")
driver.switch_to.frame(iframe)
iframe = driver.find_element(By.TAG_NAME, "iframe")
driver.switch_to.frame(iframe)
driver.find_element(By.TAG_NAME, 'View larger map').click()
iframe = driver.find_element(By.TAG_NAME, "iframe")
driver.switch_to.frame(iframe)
driver.find_element(By.TAG_NAME, 'View larger map').click()
1+1
iframe = driver.find_element(By.TAG_NAME, "iframe")
driver.find_elements(By.TAG_NAME("iframe"))
driver.switch_to.default_content()
iframe = driver.find_elements(By.TAG_NAME,'iframe')[1]
driver.switch_to.frame(iframe)
driver.find_element(By.TAG_NAME, 'View larger map').click()
driver.find_elements(By.XPATH,'//*[@id="mapDiv"]/div/div/div[4]/div/div/div/div/div/a').get_attribute("src")
driver.find_element(By.XPATH,'//*[@id="mapDiv"]/div/div/div[4]/div/div/div/div/div/a').get_attribute("src")
iframe = driver.find_element(By.TAG_NAME, "iframe")
iframe = driver.find_elements(By.TAG_NAME,'iframe')[1]
driver.switch_to.frame(iframe)
driver.find_element(By.XPATH,'//*[@id="mapDiv"]/div/div/div[4]/div/div/div/div/div/a').get_attribute("src")
driver.find_elements(By.XPATH,'//*[@id="mapDiv"]/div/div/div[4]/div/div/div/div/div/a').get_attribute("src")
driver.switch_to.default_content()
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.switch_to.frame(iframe)
driver.find_element(By.XPATH,'//*[@id="mapDiv"]/div/div/div[4]/div/div/div/div/div/a').get_attribute("src")
driver.switch_to.default_content()
iframes = driver.find_elements_by_xpath("//iframe")
iframes = driver(By.XPATH,"//iframe")
iframes = driver.find_elements(By.XPATH,"//iframe")
for index, iframe in enumerate(iframes):
# Your sweet business logic applied to iframe goes here.
driver.switch_to.frame(index)
find_all_iframes(driver)
driver.switch_to.parent_frame()
def find_all_iframes(driver):
iframes = driver.find_elements_by_xpath("//iframe")
for index, iframe in enumerate(iframes):
# Your sweet business logic applied to iframe goes here.
driver.switch_to.frame(index)
find_all_iframes(driver)
driver.switch_to.parent_frame()
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.switch_to.frame(iframe)
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.switch_to.default_content()
driver.find_elements(By.XPATH,'//*[@class="title"]')
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.switch_to.frame(iframe)
driver.find_elements(By.XPATH,'//*[@class="title"]')
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.switch_to.frame(iframe)
driver.switch_to.default_content()
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.switch_to.frame(iframe)
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.find_element(By.XPATH,'//*[@id="mapDiv"]').get_attribute("src")
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.switch_to.frame(iframe)
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.switch_to.default_content()
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.switch_to.frame(iframe)
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.switch_to.default_content()
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.switch_to.frame(iframe)
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.find_element(By.XPATH,'//*[@id="mapDiv"]').get_attribute("src")
driver.find_elements(By.XPATH,'//*[@id="mapDiv"]').get_attribute("src")
driver.find_element(By.XPATH,'//*[@class="aria-label"]').get_attribute("src")
driver.find_element(By.CLASS_NAME,'aria-label').get_attribute("src")
driver.find_element(By.CSS_SELECTOR,'aria-label').get_attribute("src")
driver.find_element(By.ID,'aria-label').get_attribute("src")
driver.find_element(By.LINK_TEXT,'aria-label').get_attribute("src")
driver.find_element(By.NAME,'aria-label').get_attribute("src")
driver.find_element(By.TAG_NAME,'aria-label').get_attribute("src")
driver.find_element(By.XPATH,'//*[@id="google-maps-link"]').get_attribute("src")
driver.find_element(By.XPATH,'//*[@id="google-maps-link"]')
driver.find_elements(By.XPATH,'//*[@id="google-maps-link"]')
driver.find_elements(By.XPATH,'//*[a]')
driver.find_elements(By.XPATH,'a')
driver.switch_to.default_content()
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.switch_to.frame(iframe)
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.find_elements(By.XPATH,'a')
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.find_elements(By.XPATH,'//*[@class="google-maps-link"]')
driver.find_elements(By.XPATH,'//*[@class="google-maps-link"]')
driver.find_elements(By.XPATH,'//div*[@class="google-maps-link"]')
driver.find_elements(By.XPATH,'//div[@class="google-maps-link"]')
driver.find_elements(By.XPATH,'//div[@class=""]')
driver.find_elements(By.XPATH,'//div[]')
driver.find_elements(By.XPATH,'//div')
driver.find_elements(By.XPATH,'//div/div/div[4]/div/div/div/div/div')
driver.find_elements(By.XPATH,'//div/div/div[4]/div/div/div/div')
driver.find_elements(By.XPATH,'//div/div/div[4]')
driver.find_elements(By.XPATH,'//div/div/div[1]')
driver.find_elements(By.XPATH,'//div/div/div[2]')
driver.find_elements(By.XPATH,'//div/div/div[5]')
driver.find_elements(By.XPATH,'//div/div/div[7]')
driver.find_elements(By.XPATH,'//div[1]')
driver.find_elements(By.XPATH,'//div/div/div[4]/div[2]/div/div/div')
driver.find_elements(By.XPATH,'//div/div/div[4]/div[1]/div/div/div')
driver.find_elements(By.XPATH,'//div/div/div[4]/div[]/div/div/div')
driver.find_elements(By.XPATH,'//div/div/div[4]/div/div/div/div')
driver.find_elements(By.XPATH,'//div/div/div[2]/div/div/div/div')
driver.find_elements(By.XPATH,'//div/div/div[1]/div/div/div/div')
driver.find_elements(By.XPATH,'//div/div/div[1]/div/div/div/div[2]')
driver.switch_to.frame(iframe)
driver.switch_to.default_content()
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.find_elements(By.XPATH,'//*[@class="title"]').text
driver.find_elements(By.XPATH,'//*[@class="title"]').text()
driver.find_elements(By.XPATH,'//*[@class="title"]').text(1)
driver.find_elements(By.XPATH,'//*[@class="title"]').text[1]
driver.find_elements(By.XPATH,'//*[@class="title"]')(1)
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.find_elements(By.XPATH,'//*[@class="title"]')text
driver.find_elements(By.XPATH,'//*[@class="title"]') %>% text
driver.find_elements(By.XPATH,'//*[@class="title"]')
driver.find_elements(By.XPATH,'//*[@class="title"]')get_attribute("href")
driver.find_elements(By.XPATH,'//*[@class="title"]').
driver.find_elements(By.XPATH,'//*[@class="title"]').get_attribute("href")
driver.find_element(By.XPATH,'//*[@class="title"]').get_attribute("href")
driver.find_element(By.XPATH,'//*[@class="title"]').text
driver.switch_to.frame(iframe)
driver.find_element(By.XPATH,'//*[@class="title"]').text
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.find_element(By.XPATH,'//*[@class="title"]').text
driver.switch_to.default_content()
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.find_element(By.XPATH,'//*[@class="title"]').text
driver.switch_to.frame(iframe)
driver.find_element(By.XPATH,'//*[@class="title"]').text
driver.find_element(By.XPATH,'//*[@class="google-maps-link"]').text
driver.find_element(By.TAG_NAME, 'button').click()
driver.switch_to.default_content()
iframe = driver.find_elements(By.TAG_NAME,'iframe')[0]
driver.find_element(By.XPATH,'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe').text
driver.find_elements(By.XPATH,'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe').text
driver.find_elements(By.XPATH,'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe')
driver.find_elements(By.XPATH,'//*[@id="src"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe')
driver.find_elements(By.XPATH,'//*[@src]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe')
driver.find_elements(By.XPATH,'//*[@class"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe')
driver.find_elements(By.XPATH,'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe/@src')
driver.find_element(By.XPATH,'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe/@src')
driver.find_element(By.XPATH,'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe/')
driver.find_element(By.XPATH,'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe')
driver.find_element(By.XPATH,'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe').get_attribute("href")
driver.find_element(By.XPATH,'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe').get_attribute("src")
link = driver.find_element(By.XPATH,
'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe').get_attribute("src")
link
re.search("\@(-?[\d\.]*)", link)
import re
re.search("\@(-?[\d\.]*)", link)
re.search(r"\@(-?[\d\.]*)", link)
a = re.search(r"\@(-?[\d\.]*)", link)
a = re.search(r"\@[-?\d\.]*\,([-?\d\.]*)", link)
re.search(r"\@[-?\d\.]*\,([-?\d\.]*)", link)
re.search(r'\@[-?\d\.]*\,([-?\d\.]*)', link)
re.search()(r'\@[-?\d\.]*\,([-?\d\.]*)', link)
link
re.search(r'!3d(-?\d+(?:\.\d+)?)!4d(-?\d+(?:\.\d+))', link)
re.search(r'[-]?[\d]+[.][\d]*', link)
coord = re.search(r'[-]?[\d]+[.][\d]*', link)
coord
coord = re.search(r'(?=)([\-]?[\d]*\.[\d]*),([\-]?[\d]*\.[\d]*)(?=&)', link)
coord = re.search(r'(?=)([\-]?[\d]*\.[\d]*),([\-]?[\d]*\.[\d]*)(?=&)', link)
coord
re.search(r'[-]?[\d]+[.][\d]*', link)
re.search(r'[-]?[\d]+[.][\d]*', link)[0]
re.search(r'[-]?[\d]+[.][\d]*', link)[1]
coord = re.search(r'(?=)([\-]?[\d]*\.[\d]*),([\-]?[\d]*\.[\d]*)(?=&)', link)
coord[0]
coord = ["lat","lon"]
for ii in coord:
str_colgen.append(ii)
str_colgen = []
for colnames_elem in elem_titles:
str_colgen.append(colnames_elem.text)
str_colgen = [ii.split(':')[0] for ii in str_colgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
str_colname = []
for colnames_elem in elem_cont:
str_colname.append(colnames_elem.text)
for colnames_elem in elem_cont:
str_colname.append(colnames_elem.text)
elem_titles = driver.find_elements(By.XPATH,'//*[@class="title"]')
elem_contgent = driver.find_elements(By.XPATH,'//*[@class="descripcion"]')
elem_cont = driver.find_elements(By.XPATH,'//*[@class="table-cell cell33"]')
elem_contgent2 = driver.find_elements(By.XPATH,'//*[@class="strongText"]')
elem_contgent3 = driver.find_elements(By.XPATH,'//div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[7]/div["label"]')
link_coord = driver.find_element(By.XPATH,
ol
ooi
link_coord = driver.find_element(By.XPATH,
'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe').get_attribute("src")
str_colgen = []
for colnames_elem in elem_titles:
str_colgen.append(colnames_elem.text)
str_colgen = [ii.split(':')[0] for ii in str_colgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
str_colname = []
for colnames_elem in elem_cont:
str_colname.append(colnames_elem.text)
str_colname = [ii.split(':')[0] for ii in str_colname] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
for ii in str_colname:
str_colgen.append(ii)
for ii in coord:
str_colgen.append(ii)
str_colgen
coord1 = [ii.split(',')[1] for ii in coord] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord = re.search(r'(?=)([\-]?[\d]*\.[\d]*),([\-]?[\d]*\.[\d]*)(?=&)', link_coord)
coord1 = [ii.split(',')[1] for ii in coord] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = [ii.split(',')[1] coord] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = [ii.split(',')[1], coord] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = [ii.split(','), coord] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = [ii.split(','), coord[0]] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord.split(',') # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord = re.search(r'(?=)([\-]?[\d]*\.[\d]*),([\-]?[\d]*\.[\d]*)(?=&)', link_coord)
coord1 = coord[1] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord[0] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord[0,1] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord[0,0] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord[-1] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord[2] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord[0] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord[0] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord[1] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord[2] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord[1] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord1 = coord[2] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord = re.search(r'(?=)([\-]?[\d]*\.[\d]*),([\-]?[\d]*\.[\d]*)(?=&)', link_coord)[0]
coord.split()
coord = coord.split()
coord
coord[0]
coord = re.search(r'(?=)([\-]?[\d]*\.[\d]*),([\-]?[\d]*\.[\d]*)(?=&)', link_coord)[0]
coord = coord.split()
for xz in coord:
str_contgen.append(xz)
str_colgen = []
for colnames_elem in elem_titles:
str_colgen.append(colnames_elem.text)
str_colgen = [ii.split(':')[0] for ii in str_colgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
# Nombres columna específico
str_colname = []
for colnames_elem in elem_cont:
str_colname.append(colnames_elem.text)
str_colname = [ii.split(':')[0] for ii in str_colname] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
for ii in str_colname:
str_colgen.append(ii)
for ii in coord:
str_colgen.append(ii)
df = pd.DataFrame(columns = str_colgen)
str_colgen = []
for colnames_elem in elem_titles:
str_colgen.append(colnames_elem.text)
str_colgen = [ii.split(':')[0] for ii in str_colgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
str_colname = []
for colnames_elem in elem_cont:
str_colname.append(colnames_elem.text)
str_colname = [ii.split(':')[0] for ii in str_colname] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
for ii in str_colname:
str_colgen.append(ii)
for ii in coord:
str_colgen.append(ii)
df = pd.DataFrame(columns = str_colgen)
View(df)
coord = ["lat","lon"]
for ii in coord:
str_colgen.append(ii)
df = pd.DataFrame(columns = str_colgen)
View(df)
del df
df = pd.DataFrame(columns = str_colgen)
View(df)
del str_colgen
str_colname = []
for colnames_elem in elem_cont:
str_colname.append(colnames_elem.text)
str_colname = [ii.split(':')[0] for ii in str_colname] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
for ii in str_colname:
str_colgen.append(ii)
for ii in coord:
str_colgen.append(ii)
df = pd.DataFrame(columns = str_colgen)
str_colgen = []
for colnames_elem in elem_titles:
str_colgen.append(colnames_elem.text)
str_colgen = [ii.split(':')[0] for ii in str_colgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
# Nombres columna específico
str_colname = []
for colnames_elem in elem_cont:
str_colname.append(colnames_elem.text)
str_colname = [ii.split(':')[0] for ii in str_colname] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
for ii in str_colname:
str_colgen.append(ii)
for ii in coord:
str_colgen.append(ii)
df = pd.DataFrame(columns = str_colgen)
View(df)
str_colgen = []
for colnames_elem in elem_titles:
str_colgen.append(colnames_elem.text)
str_colgen = [ii.split(':')[0] for ii in str_colgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
# Nombres columna específico
str_colname = []
for colnames_elem in elem_cont:
str_colname.append(colnames_elem.text)
str_colname = [ii.split(':')[0] for ii in str_colname] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
for ii in str_colname:
str_colgen.append(ii)
for ii in coord:
str_colgen.append(ii)
df = pd.DataFrame(columns = str_colgen)
View(df)
str_contgen = []
for colnames_elem in elem_contgent:
str_contgen.append(colnames_elem.text)
str_contgen = [ii.split(':')[0] for ii in str_contgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
str_contgen
# Nombres contenido general 2
str_contgent2 = []
for colnames_elem in elem_contgent2:
str_contgent2.append(colnames_elem.text)
# Nombres contenido general 3
str_contgent3 = []
for colnames_elem in elem_contgent3:
str_contgent3.append(colnames_elem.text)
str_contgent3 = [ii.split(':')[1] for ii in str_contgent3] #
# Nombres contenido específico
str_cont = []
for colnames_elem in elem_cont:
str_cont.append(colnames_elem.text)
str_cont = [ii.split(':')[1] for ii in str_cont] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
str_contgen = []
for colnames_elem in elem_contgent:
str_contgen.append(colnames_elem.text)
str_contgen = [ii.split(':')[0] for ii in str_contgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
str_contgen
str_contgent2 = []
for colnames_elem in elem_contgent2:
str_contgent2.append(colnames_elem.text)
str_contgent3 = []
for colnames_elem in elem_contgent3:
str_contgent3.append(colnames_elem.text)
str_contgent3 = [ii.split(':')[1] for ii in str_contgent3] #
str_cont = []
for colnames_elem in elem_cont:
str_cont.append(colnames_elem.text)
str_cont = [ii.split(':')[1] for ii in str_cont] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord = re.search(r'(?=)([\-]?[\d]*\.[\d]*),([\-]?[\d]*\.[\d]*)(?=&)', link_coord)[0]
coord = coord.split()
for xx in str_contgent3:
str_contgen.append(xx)
for xy in str_contgent2:
str_contgen.append(xy)
for xz in str_cont:
str_contgen.append(xz)
for xz in coord:
str_contgen.append(xz)
df.loc[i] = str_contgen
View(df)
len(str_contgent)
len(str_contgen)
len(str_contgen)
str_contgen
coord = re.search(r'(?=)([\-]?[\d]*\.[\d]*),([\-]?[\d]*\.[\d]*)(?=&)', link_coord)[0]
coord = coord.split(",")
str_contgen = []
for colnames_elem in elem_contgent:
str_contgen.append(colnames_elem.text)
str_contgen = [ii.split(':')[0] for ii in str_contgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
str_contgen = []
for colnames_elem in elem_contgent:
str_contgen.append(colnames_elem.text)
str_contgen = [ii.split(':')[0] for ii in str_contgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
str_contgen
str_contgent2 = []
for colnames_elem in elem_contgent2:
str_contgent2.append(colnames_elem.text)
str_contgent3 = []
for colnames_elem in elem_contgent3:
str_contgent3.append(colnames_elem.text)
str_contgent3 = [ii.split(':')[1] for ii in str_contgent3] #
str_cont = []
for colnames_elem in elem_cont:
str_cont.append(colnames_elem.text)
str_cont = [ii.split(':')[1] for ii in str_cont] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord = re.search(r'(?=)([\-]?[\d]*\.[\d]*),([\-]?[\d]*\.[\d]*)(?=&)', link_coord)[0]
coord = coord.split(",")
for xx in str_contgent3:
str_contgen.append(xx)
for xy in str_contgent2:
str_contgen.append(xy)
for xz in str_cont:
str_contgen.append(xz)
for xz in coord:
str_contgen.append(xz)
df.loc[i] = str_contgen
View(df)
for i in range(1,len(driver.find_elements(By.XPATH, items_pag))+1):
link = driver.find_element(By.XPATH,new_tab.format(i)).get_attribute("href")
driver.switch_to.window("secondtab")
driver.get(link)
time.sleep(0.2)
elem_titles = driver.find_elements(By.XPATH,'//*[@class="title"]')
elem_contgent = driver.find_elements(By.XPATH,'//*[@class="descripcion"]')
elem_cont = driver.find_elements(By.XPATH,'//*[@class="table-cell cell33"]')
elem_contgent2 = driver.find_elements(By.XPATH,'//*[@class="strongText"]')
elem_contgent3 = driver.find_elements(By.XPATH,'//div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[7]/div["label"]')
link_coord = driver.find_element(By.XPATH,
'//*[@id="layoutContainers"]/div/div[2]/div[2]/div/section/div[2]/div[2]/div[3]/div[12]/div/iframe').get_attribute("src")
# if i == 1:
############################
# Nombres columna general
str_colgen = []
for colnames_elem in elem_titles:
str_colgen.append(colnames_elem.text)
str_colgen = [ii.split(':')[0] for ii in str_colgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
# Nombres columna específico
str_colname = []
for colnames_elem in elem_cont:
str_colname.append(colnames_elem.text)
str_colname = [ii.split(':')[0] for ii in str_colname] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
for ii in str_colname:
str_colgen.append(ii)
for ii in coord:
str_colgen.append(ii)
df = pd.DataFrame(columns = str_colgen)
############################
# Nombres contenido general
str_contgen = []
for colnames_elem in elem_contgent:
str_contgen.append(colnames_elem.text)
str_contgen = [ii.split(':')[0] for ii in str_contgen] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
str_contgen
# Nombres contenido general 2
str_contgent2 = []
for colnames_elem in elem_contgent2:
str_contgent2.append(colnames_elem.text)
# Nombres contenido general 3
str_contgent3 = []
for colnames_elem in elem_contgent3:
str_contgent3.append(colnames_elem.text)
str_contgent3 = [ii.split(':')[1] for ii in str_contgent3] #
# Nombres contenido específico
str_cont = []
for colnames_elem in elem_cont:
str_cont.append(colnames_elem.text)
str_cont = [ii.split(':')[1] for ii in str_cont] # Para obtener los títulos de columna específicos. 0 para titulo, 1 para contenido
coord = re.search(r'(?=)([\-]?[\d]*\.[\d]*),([\-]?[\d]*\.[\d]*)(?=&)', link_coord)[0]
coord = coord.split(",")
for xx in str_contgent3:
str_contgen.append(xx)
for xy in str_contgent2:
str_contgen.append(xy)
for xz in str_cont:
str_contgen.append(xz)
# coord
for xz in coord:
str_contgen.append(xz)
df.loc[i] = str_contgen
if i == 1:
df0 = df
if i != 1:
df0 = pd.concat([df0,df], join = "outer")
driver.switch_to.window(first_tab)
time.sleep(0.2)
shiny::runApp('~/GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('~/GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')

shiny::runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
library(shiny)
library(tidyverse)
library(bslib)
library(shinydashboard)
shiny::runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
leaflet() %>% addTiles() %>%
addPolygons(data = cant.sp,color = "green",weight = 2) %>%
fitBounds(bbox.canton[[1]], bbox.canton[[2]], bbox.canton[[3]], bbox.canton[[4]]) %>%
addLegendCustom("bottomright",
color = "white; width:20px; height:20px; border:3px solid white; border-radius:0%",
label = "<div style='display: inline-block;height: 20px;margin-top: 4px;line-height: 20px;'>Límite Cantonal</div>",
size = 20,
borders = "green") %>%
addScaleBar(position = "topleft",scaleBarOptions(metric = T)) %>%
#addMarkers(data = cant.sp, icon = symbols, lat = ~lat, lng = ~lon) %>%
addMinicharts(lat = cant.sp2$lat, lng = cant.sp2$lon,
type = "pie",
chartdata = select(cant.sp2,Licitacion.menor,Licitacion.publica.nacional,
Licitacion.reducida,Licitacion.abreviada,Contratacion.especial
,Remate,Contratacion.directa),
width = 60*sqrt(cant.sp2$sum.procedimiento)/sqrt(max(cant.sp2$sum.procedimiento)))
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
library(RColorBrewer)
display.brewer.all()
leaflet() %>% addTiles() %>%
addPolygons(data = cant.sp,color = "green",weight = 2) %>%
fitBounds(bbox.canton[[1]], bbox.canton[[2]], bbox.canton[[3]], bbox.canton[[4]]) %>%
addLegendCustom("bottomright",
color = "white; width:20px; height:20px; border:3px solid white; border-radius:0%",
label = "<div style='display: inline-block;height: 20px;margin-top: 4px;line-height: 20px;'>Límite Cantonal</div>",
size = 20,
borders = "green") %>%
addScaleBar(position = "topleft",scaleBarOptions(metric = T)) %>%
#addMarkers(data = cant.sp, icon = symbols, lat = ~lat, lng = ~lon) %>%
addMinicharts(lat = cant.sp2$lat, lng = cant.sp2$lon,
type = "pie",
chartdata = select(cant.sp2,Licitacion.menor,Licitacion.publica.nacional,
Licitacion.reducida,Licitacion.abreviada,Contratacion.especial
,Remate,Contratacion.directa),
width = 60*sqrt(cant.sp2$sum.procedimiento)/sqrt(max(cant.sp2$sum.procedimiento)),
colorPalette = brewer.pal("set3"))
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
leaflet() %>% addTiles() %>%
addPolygons(data = cant.sp,color = "green",weight = 2) %>%
fitBounds(bbox.canton[[1]], bbox.canton[[2]], bbox.canton[[3]], bbox.canton[[4]]) %>%
addLegendCustom("bottomright",
color = "white; width:20px; height:20px; border:3px solid white; border-radius:0%",
label = "<div style='display: inline-block;height: 20px;margin-top: 4px;line-height: 20px;'>Límite Cantonal</div>",
size = 20,
borders = "green") %>%
addScaleBar(position = "topleft",scaleBarOptions(metric = T)) %>%
#addMarkers(data = cant.sp, icon = symbols, lat = ~lat, lng = ~lon) %>%
addMinicharts(lat = cant.sp2$lat, lng = cant.sp2$lon,
type = "pie",
chartdata = select(cant.sp2,Licitacion.menor,Licitacion.publica.nacional,
Licitacion.reducida,Licitacion.abreviada,Contratacion.especial
,Remate,Contratacion.directa),
width = 60*sqrt(cant.sp2$sum.procedimiento)/sqrt(max(cant.sp2$sum.procedimiento)),
colorPalette = brewer.pal(7,"set3"))
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('D:/git/R-Geografia-y-Data/SICOP_Map2')
runApp('D:/git/R-Geografia-y-Data/SICOP-LiveApp')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
shiny::runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
shiny::runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
shiny::runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
shiny::runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
shiny::runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
install.packages("isoband")
shiny::runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
runApp('GitHub/ShinyApps-Repo/SICOP-Ofertas/SICOP-Mapa_Simple')
setwd("~/GitHub/R-Geografia-y-Data/posts/SICOP_Representacion")
setwd("~/GitHub/R-Geografia-y-Data/posts/SICOP_Representacion")
setwd("~/GitHub/R-Geografia-y-Data/posts/SICOP_Representacion")
data.sicop <- read.csv("output/csv/TablaLimpiaSICOP.csv")
data.sicop$fecha.hora.publicacion <- as.Date(data.sicop$Fecha.hora.de.publicación, "%d/%m/%Y %H:%M")
View(data.sicop)
library(tidyverse)
library(tidyverse)
library(shiny)
data.filter <- select(data.sicop,
Nombre == "Heredia" &
Tipo.de.modalidad == "Servicios")
data.filter <- select(data.sicop,
Nombre == "Heredia" |
Tipo.de.modalidad == "Servicios")
data.filter <- select(data.sicop,
Nombre == "Heredia")
data.filter <- data.sicop %>% select(Nombre == "Heredia")
data.filter <- data.sicop %>% select(Nombre)
View(data.filter)
data.filter <- data.sicop %>% select(Nombre == Heredia)
data.filter <- data.sicop %>% select(Nombre == "Heredia")
data.filter <- data.sicop %>% group_by(Nombre == "Heredia")
View(data.filter)
data.filter <- data.sicop %>% group_by(Nombre)
data.filter <- data.sicop %>% group_by(Nombre)
data.filter <- data.sicop %>% group_by(Nombre) %>%
summarize(conteo_modalidad = count(Tipo.de.modalidad))
data.filter <- data.sicop %>% group_by(Nombre) %>%
summarize(conteo_modalidad = n_distinct(Tipo.de.modalidad))
View(data.filter)
data.filter <- data.sicop %>% group_by(Tipo.de.modalidad) %>%
summarize(conteo_modalidad = n_distinct(Tipo.de.modalidad))
View(data.filter)
data.filter <- data.sicop %>% group_by(Estado.del.concurso) %>%
summarize(conteo_modalidad = n_distinct(Tipo.de.modalidad))
View(data.filter)
data.filter <- data.sicop$Estado.del.concurso %>%
summarize(Estado.del.concurso = n_distinct(Estado.del.concurso))
data.filter <-n_distinct(data.sicop$Estado.del.concurso)
n_distinct(data.sicop$Estado.del.concurso)
length(unique(data.sicop$Estado.del.concurso))
count(data.sicop$Estado.del.concurso)
aggregate(data.sicop$Estado.del.concurso)
n(data.sicop$Estado.del.concurso)
data.filter <- data.sicop %>% summarise(Count = n())
data.filter <- data.sicop %>% group_by(Estado.del.concurso) %>% summarise(Count = n())
View(data.filter)
data.filter <- data.sicop %>% group_by(Estado.del.concurso) %>% summarise(Count = n()) %>% ggplot()
